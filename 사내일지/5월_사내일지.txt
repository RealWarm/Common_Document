http://localhost:8080
"백문여 불여 일타"
강의 << 책 << 구글링 
=========================================================================
"아키텍처 팀은 왜 이게 필요하고, 왜 이렇게 되는건지 알아봐야한다"

나만의 스트레스 해소법을 찾자 >> 스트레스는 못참는다.

회사는 기회를 줄뿐, 기회를 통한 경험을 심화 시키고 배워서 전문가가 되자

일을 할때는 효율화된 방법을 생각하자 >> 사무 자동화

적시성 염두하자 >> 일을 할때는 항상 마감기한을 준수하자

정확성을 염두하자 >> 데이터의 정확성, 사소한것 잘지키기

본인의 평가(고과) 관리에 관심을 갖자

청사진을 만들어 보자

목표를 적고 세부적인 계획을 세운다

기대하지 말자 내가 알아서 다한다, 모르면 물어본다

긴장은 하되 쫄지는 말자

혼자 고민하지 말아라 >> 한 달 이내에 위기가 온다

동기, 정규직, 선배, 후배가 힘들어 할 때 모른척 하지말자

안가르쳐준다고 서운해 하지말고 차분히 마음 가라 앉히고 천천히 배워보자
=========================================================================
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
5월 1주 주간 목표

========= 팀장님 과제 =========
- 스프링 logback
- 스프링 프로파일
- 스프링 시큐리티
- 데이터 베이스에 더미 데이터 집어넣기
**** restAPI만들기

========= 개인 프로젝트 =========
- 스토리보드 작성하기
- DB 설계하기

========= 스프링 시큐리티 공부하기 =========


========= 스프링 구동원리 공부하기 =========
- 그 책 읽기
- 집에서 환경세팅 해보기

========= 카  프  카 ==========

========= 스프링 부트 =========


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- 배해병 칼럼읽어보기
- 배해병 카페 들어가보기
- 리베르또 유튜브 보기
- 거절멘트 준비해보기
- 거절에대한 마음가지 준비해보기
- 견문을 넓혀보기
- 버킷리스트 만들기
- 만다라트 만들기
- 거절 대처법 만들기
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
==========================================================================
=========================================================================
++ 5월 3일 월요일
whatap(APM툴)접속정보
url : http://203.224.129.73:48080
id : admin@whatap.io
pw : admin
++++++++++++++ 공 지 사 항 ++++++++++++++
- 응답속도 그래프 >> 파라미터 찾아서 세우기 >> 이건 금방
- 부하증가 & tps 그래프 >> jmeter에서 보이게 하자
tps 258

tps 개념
- transaction per second >> 운영단계에서 주로 얘기함
- throughput  per second >> 운영전단계에서 주로 얘기함

서비스 dao >> 쓰레드 내부 프로그래밍

datasource같은 beans는 싱글톤이다 >> 한번만들고 재사용한다 >> 쓰레드 바깎쪽

new test >> 쓰레드 안쪽 >> 여러번 만듬

현재 접속중인 사람중에 

쓰레드 밖과 안 >> 밖에서 사용자를 세어야한다 >> 두려워한다 왜? 어려우니깐 >> 이것만 잘하면 신세계가 펼쳐진다

init-method >> anjwl?

정적데이터 >> 최대한 싱글톤으로 만들어 놓고 & 필요할때마다 주면 속도가 엄청 빠르다 >> ex) 메뉴가 570개일때 첫 번쨰 db에서 받아오고 메모리에 상주시키면 db를 다시 갈 필요가 없다 >> 엄청 빨라진다

[2] 그래프보기
[3] 정적 데이터 (메뉴갯수) 늘려보자 + 권한만들기?


어떻게 메뉴 조회하는 부분을 빠르게 할까? >> 객체를 한번생성하는 방법으로 튜닝하자 >> 쓰레드 안과 밖을 넘나드는 것은 어려운 프로그래밍이다 >> 


로그인 >> 메인(메뉴조회) >> 게시판 목록조회 >> 상세조회

메인 조회 >> 비동기??

- 그래프 3개

++++++++++++++ 오늘의 목표 ++++++++++++++
- db 설계하기

++++++++++++++ 오늘 이룬것 ++++++++++++++
- 시큐리티 공부
- 깃 인강 1개 & 문자열 인강

========================================================================
++ 5월 4일 화요일

밀리세컨드 : 1000분의 1로 나눈 값
throughput(처리량)
- 초당 처리 가능한 요청 횟수

******* Summary Report
- 종합적인 데이터 확인

******* View Results Tree
- 실제로 주고받는 데이터 및 상세한 상태를 확인가능
- 각각의 요청, 응답, 실제 데이터를 상세히 보여줍니다
- 사용자가 늘수록 응답시간이 늘어난다면, 아파치의 성능에 비해 로직이 
  무거워서 리소스 반환이 늦으므로 튜닝이 필요하다고 볼 수 있습니다.

******* Response Times vs Threads
- 사용자 변화에 따른 응답 속도
- 동시접속 사용자 수에 따른 응답시간의 변화를 보여줌

******* Response Time Over Time
- 그래프에서 중간에 튀는 구간이 있는 것은 응답시간이 확 늘어나는 구간이 있다는 의미입니다.

******* Transaction Throughput vs Threads
- 사용자 변화에 따른 초당 처리 건수
- 동시접속 사용자 수에 따른 전송데이터량을

******* Transactions per Second
- 일반적인 관점에서 초당 특정 엔티티가 수행한 원자 동작의 수

******* Composite Graph
여러 결과 그래프를 함께 보여준다. 문서에서는 다음 결과 그래프들을 함께 보여주도록 설정하였다.

******* Active Threads Over Time
- 그래프에서 중간에 튀는 구간이 있는 것은 응답시간이 확 늘어나는 구간이 있다는 의미입니다.

++++++++++++++ 공 지 사 항 ++++++++++++++
- 하나의 와스에서 200트랜잭션을 처리한다

성능테스트 결과 보고서
- 부하 발생기에서만 나온데이터 >> 쓰레기 >> 오늘은 여기
- 부하발생기정보 + apm + was + cpu + web + db + 메모리 >> 베스트! (6일 까지)
- 싱글턴 만드는법 >> 싱글턴 코드를 리뷰한다 >> 과제!!!!!!!!!!!!!!!!!!!
- 전혀 모르는 사람이 보고도 이해 할 수 있을 정도로

메뉴인덱스
메뉴헤더

csv image를 전체

최대한 디테일하게 문서로 만들어 주자.

++++++++++++++ 오늘의 목표 ++++++++++++++
- @Inject는 싱글톤만 되나?

++++++++++++++ 오늘 이룬것 ++++++++++++++
- 스프링 시큐리티 오류수정이 복잡해져서 첨부터 다시함 >> 리퀘스트 매핑이 안잡힘

=========================================================================
++ 5월 6일 목요일

++++++++++++++ 공 지 사 항 ++++++++++++++

++++++++++++++ 오늘의 목표 ++++++++++++++

++++++++++++++ 오늘 이룬것 ++++++++++++++
- 싱글턴 자료 + 발표자료 완성
- mgmt.msc
- 알고리즘
- db 설계
=========================================================================
++ 5월 7일 금요일

++++++++++++++ 공 지 사 항 ++++++++++++++

- 차주 월요일 ebs 온라인 클래스 SET 프로젝트가 있음 >> gsitm이 하다가 못하겠다고 말함 >> 유지보수하던 쌍용이 잡음 >> 문제가 얼마나 큰지 아키텍처 진단에 들어 가심 >> 고민스럽다 >> 김인섭 부장님 투입 예정 

- ebs 패밀리사이트 >> 일산 >> 쌍용이 높은 평가를 받고 있다

- 나이스 투입 >> 프레임워크 할거 별로 없다

- 성능테스트 마무리 오늘까지 >> 보고서 오늘 까지

- 다음 주부터는 프레임 워크 튜닝을 한다 >> 성능테스트 결과서를 기반으로 한다
>> Restful 호출 & 동적데이터(캐시반영)을 사용한다 >> 프로토 타입을 이번 주내로

- 나이스 >> msa에서의 클라우드 플랫폼을 만들어달라 >> 5월 4쨰주 정도에 투입예정

- 이행사업부의 가동률이 90퍼다 >> 모든 사람이 다 투입되어있다 "우리만 빼고"
>> 리스크가 어마어마 하다 >> 쌍용이 사업을 쓸어 담고 있다 >> 개발인력 추천해달라
>> 사람이 모자르다

- 나이스 사업에서 제약을 걸음 >> 유틸을 다못주겠다 >> 2명이서 2개월, 1명이 4개월

- 다음 주부터는 매일매일 18에 진도 체크를 한다 >> 일정이 빠듯 하니까
  오늘 공부한 내용, 사용한 프레임워크, 테스트한 것들

- 고민해서 찾은 방법은 잘 잊어 버리지 않는다 >> 시행착오를 피하면 안된다
	>> 부지런히 공부를 하자!

- 삼성전자 DS에서 프로젝트 맡김 >> 모의해킹, 웹 취약점

- 허성훈 이사님 sh공사 6월 1일 , 황형기 이사님 DBA

- 스토리.아이티센.kpi에 등록하자

- 상반기에 유틸을 얼마 못받음 >> 압박을 받으심

- 쪼끔 실력이 올라오면 프로젝트에 투입시킬 예정이심

- 카프카 공부해봐라!

++++++++++++++ 오늘의 목표 ++++++++++++++


++++++++++++++ 오늘 이룬것 ++++++++++++++
- 스프링 시큐리티 테이블에서 문제 >> 해결!
- 카프카 공부
- kpi 작성

=========================================================================
++ 5월 일 요일

++++++++++++++ 공 지 사 항 ++++++++++++++


++++++++++++++ 오늘의 목표 ++++++++++++++


++++++++++++++ 오늘 이룬것 ++++++++++++++

=========================================================================
#########################################################################
=========================================================================
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
5월 2주 주간 목표


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
=========================================================================
#########################################################################
=========================================================================
++ 5월 일 요일

++++++++++++++ 공 지 사 항 ++++++++++++++


++++++++++++++ 오늘의 목표 ++++++++++++++


++++++++++++++ 오늘 이룬것 ++++++++++++++

=========================================================================
++ 5월 일 요일

++++++++++++++ 공 지 사 항 ++++++++++++++


++++++++++++++ 오늘의 목표 ++++++++++++++


++++++++++++++ 오늘 이룬것 ++++++++++++++

=========================================================================
++ 5월 일 요일

++++++++++++++ 공 지 사 항 ++++++++++++++


++++++++++++++ 오늘의 목표 ++++++++++++++


++++++++++++++ 오늘 이룬것 ++++++++++++++

=========================================================================
++ 5월 일 요일

++++++++++++++ 공 지 사 항 ++++++++++++++


++++++++++++++ 오늘의 목표 ++++++++++++++


++++++++++++++ 오늘 이룬것 ++++++++++++++

=========================================================================
++ 5월 일 요일

++++++++++++++ 공 지 사 항 ++++++++++++++


++++++++++++++ 오늘의 목표 ++++++++++++++


++++++++++++++ 오늘 이룬것 ++++++++++++++

=========================================================================
++ 5월 일 요일

++++++++++++++ 공 지 사 항 ++++++++++++++


++++++++++++++ 오늘의 목표 ++++++++++++++


++++++++++++++ 오늘 이룬것 ++++++++++++++


=========================================================================
#########################################################################
#########################################################################
=========================================================================
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
5월 2주 주간 목표


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
=========================================================================
#########################################################################
=========================================================================
++ 5월 일 요일

++++++++++++++ 공 지 사 항 ++++++++++++++


++++++++++++++ 오늘의 목표 ++++++++++++++


++++++++++++++ 오늘 이룬것 ++++++++++++++

==========================================================================


















create table users(
    username varchar2(50) not null primary key,
    password varchar2(50) not null,
    enabled char(1) default '1'
);

create table authorities(
    username varchar2(50) not null,
    authority varchar2(50) not null,
    constraint fk_authorities_users 
    foreign key(username) 
    references users(username)
);

create unique index ix_auth_username on authorities (username, authority);

insert into users (username, password) values ('user00','pw00');
insert into users (username, password) values ('member00','pw00');
insert into users (username, password) values ('admin00','pw00');

select * from users;

select
    username, password, enabled 
from 
    users 
where 
    username = "admin00";


insert into authorities (username, authority) values('user00',   'ROLE_USER');
insert into authorities (username, authority) values('member00', 'ROLE_MANAGER');
insert into authorities (username, authority) values('admin00',  'ROLE_MANAGER');
insert into authorities (username, authority) values('admin00',  'ROLE_ADMIN');

SELECT * FROM authorities;

COMMIT;













