

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
OPEN API

[1] RestFul API 만들기
1. CXF 라이브러리
2. 스프링 RESTFUL >> 아주쉽다 >> WADL 웹서비스 명세 정보 추출이안나옴

[2] SOAP >> 명세정보가 WSDL이 나온다 >> 더어렵다 >> 시간되면 해봐라
1. CXF 라이브러리

[명세정보란?]
공 통 : URI + REQUEST + RESPONSE
REST는 서비스 오퍼레이션이 명확히 구분이 잘안됨
SOAP은 서비스 오퍼레이션이 명확히 구분이 된다

CXF 라이브러리를 이용해서 웹서비스를 구현하는데
XML, JSON 둘다 되야한다 >> 사용자의 요청 타입 파라미터에 따라서 되게끔!

[클라우드의 사상]
로드밸런서가 오토 스케일 아웃한다(WAS) 
왜 RESTFUL이 필요하지? >> 

가로로 쪼개는 법 FRONT BACK
세로로 쪼개는 법

2002 와스 등장
2004 JDK 1.5업그레이드 >> 웹서비스(SOAP) 개념등장  
>> 데이터 연계아키텍처(EAI) 등장
{연계 방식}
1. API TO API
2. FILE TO FILE
3. DB TO DB

2008 레거시를 웹서비스로 만들자 >> 다른 시스템의 의존성을 낮출수 있지않을까? 
>> SOA(서비스 지향 아키텍처)등장 >> 클라우드라는 개념 등장함

가상화 + 가상화에 대한 "관리 API" = 클라우드 >> IAAS의 시작
컨테이너 가상화 >> PAAS
SAAS 는?

클라우드 아키텍처는 RESTFUL API가 반드시 들어간다.

클라우드 MSA API에 첫 발을 띄운거다.

웹서비스 컨트롤러 코드 만드는법
1. string
2. ResponseEntity
3. void
각각 다해보자 다 장단점이 있다
** 보안에 취약하다 >> 인증체계가 필요하다 >> Session으로 인증 x >> 인증키, 아이피 기반 인증방식이 있다
cxf >> prehandler posthandler 인터셉터를 사용하면 쉽게 된다.

유지보수가 편해진다!!

++ SSO도 만들 수 있게된다.

CXF >> 메이븐 >> 버전 몇으로 할지 조사해보자 >> 최신버전이 좋은건 아니다 >> 지금하고있는 JDK, SPRING의 버전과 궁합이 잘맞는 것을 선택해보자

context-webservice.XML(?)
=========================================================================

=========================================================================

=========================================================================

=========================================================================

=========================================================================

=========================================================================

=========================================================================